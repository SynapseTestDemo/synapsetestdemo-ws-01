{
	"name": "03 Text_Analytics_Cognitive_Services",
	"properties": {
		"folder": {
			"name": "Test notebooks"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "analyticspool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7e416de3-c506-4776-8270-83fd73c6cc37/resourceGroups/demosynapserg/providers/Microsoft.Synapse/workspaces/wsazuresynapseanalytics/bigDataPools/analyticspool",
				"name": "analyticspool",
				"type": "Spark",
				"endpoint": "https://wsazuresynapseanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/analyticspool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import mmlspark\n",
					"\n",
					"if mmlspark.__spark_package_version__ < \"1.0.0-rc3\":\n",
					"    raise Exception(\"This notebook is not compatible with the current version of mmlspark: {}. Please upgrade to 1.0.0-rc3 or higher.\".format(\n",
					"        mmlspark.__spark_package_version__))"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"from mmlspark.cognitive import *\n",
					"from notebookutils import mssparkutils\n",
					"from pyspark.sql.functions import explode\n",
					"\n",
					"# Fetch the subscription key (or a general Cognitive Service key) from Azure Key Vault\n",
					"service_key = mssparkutils.credentials.getSecret(\"nellies-keyvault\", \"textsecret\", \"Nellies_Keyvault\")\n",
					"\n",
					"# Load the data into a Spark DataFrame\n",
					"df = spark.sql(\"SELECT * FROM default.fabrikam_text_analytics\")\n",
					"\n",
					"sentiment = (TextSentiment()\n",
					"    .setLocation(\"eastus\")\n",
					"    .setSubscriptionKey(service_key)\n",
					"    .setOutputCol(\"output\")\n",
					"    .setErrorCol(\"error\")\n",
					"    .setLanguage(\"en\")\n",
					"    .setTextCol(\"comment\"))\n",
					"\n",
					"results = sentiment.transform(df)\n",
					"\n",
					"# Show the results\n",
					"display(results\\\n",
					"    .select(\"comment\", explode(\"output\").alias(\"exploded\"), \"error\")\\\n",
					"    .select(\"comment\", \"exploded.*\", \"error\")\\\n",
					"    .limit(10))"
				],
				"attachments": null,
				"execution_count": 2
			}
		]
	}
}